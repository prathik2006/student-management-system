// src/components/AddStudent.js
import React from 'react';
import { Formik, Form, Field, ErrorMessage } from 'formik';
import { addStudent } from '../api/api';
import { useNavigate } from 'react-router-dom';
import * as Yup from 'yup';
import './StudentForm.css';

const AddStudent = () => {
  const navigate = useNavigate();
  const currentYear = new Date().getFullYear();

  const validationSchema = Yup.object({
    studentId: Yup.string().required('Required').matches(/^[a-zA-Z0-9]+$/, 'Only alphanumeric characters allowed'),
    firstName: Yup.string().required('Required').min(2, 'At least 2 characters'),
    lastName: Yup.string().required('Required').min(2, 'At least 2 characters'),
    email: Yup.string().email('Invalid email').required('Required'),
    dob: Yup.date().required('Required').max(new Date(), 'Future date not allowed'),
    department: Yup.string().required('Required'),
    enrollmentYear: Yup.number().required('Required').min(2000).max(currentYear),
    isActive: Yup.boolean()
  });

  const initialValues = {
    studentId: '',
    firstName: '',
    lastName: '',
    email: '',
    dob: '',
    department: '',
    enrollmentYear: currentYear,
    isActive: true,
  };

  const handleSubmit = async (values, { setSubmitting, resetForm }) => {
    try {
      await addStudent(values);
      resetForm();
      navigate('/students');
    } catch (err) {
      console.error(err);
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <div className="student-form-container fade-in">
      <div className="card">
        <h1 className="form-title">Add New Student</h1>
        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>
          {({ isSubmitting, errors, touched }) => (
            <Form>
              {/* Form Fields Same As Before */}
            </Form>
          )}
        </Formik>
      </div>
    </div>
  );
};

export default AddStudent;
